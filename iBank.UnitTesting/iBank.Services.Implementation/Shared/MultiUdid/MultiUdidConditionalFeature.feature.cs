// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace iBank.UnitTesting.IBank_Services_Implementation.Shared.MultiUdid
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class MultiUdidConditionalFeatureFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MultiUdidConditionalFeature.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MultiUdidConditionalFeature", "\tIn order to filter records with an advanced udid criteria\r\n\tI need to determine " +
                    "if a record should be kept or discarded\r\n\tBy comparing the udid number and udid " +
                    "text", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "MultiUdidConditionalFeature")))
            {
                global::iBank.UnitTesting.IBank_Services_Implementation.Shared.MultiUdid.MultiUdidConditionalFeatureFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MultipleUdidFilters_EqualsOperator_AndJoin_KeepAllRecordsWithSameUdidNumberAndSam" +
            "eUdidText")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MultiUdidConditionalFeature")]
        public virtual void MultipleUdidFilters_EqualsOperator_AndJoin_KeepAllRecordsWithSameUdidNumberAndSameUdidText()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MultipleUdidFilters_EqualsOperator_AndJoin_KeepAllRecordsWithSameUdidNumberAndSam" +
                    "eUdidText", ((string[])(null)));
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I have a record with a reckey of \'1\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
  testRunner.And("I have a record with a reckey of \'1\' and a udid number of \'11\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'11\' and a udid text of" +
                    " \'nope\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
  testRunner.And("I have a record with a reckey of \'3\' and a udid number of \'12\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
  testRunner.And("I have a udid parameter with a udid number of \'10\' and a udid text of \'foo\' and a" +
                    "n operator of \'Equal\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
  testRunner.And("I have a udid parameter with a udid number of \'11\' and a udid text of \'foobar\' an" +
                    "d an operator of \'Equal\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
  testRunner.And("I have an AndOr of \'And\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.When("I get the reckeys to keep", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.Then("I have \'1\' distinct reckeys remaining", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 18
  testRunner.And("the reckey \'1\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
  testRunner.And("the reckey \'2\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
  testRunner.And("the reckey \'3\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MultipleUdidFilters_EqualsOperator_AndJoin_HasWildcards_KeepAllRecordsWithSameUdi" +
            "dNumberAndSameUdidText")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MultiUdidConditionalFeature")]
        public virtual void MultipleUdidFilters_EqualsOperator_AndJoin_HasWildcards_KeepAllRecordsWithSameUdidNumberAndSameUdidText()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MultipleUdidFilters_EqualsOperator_AndJoin_HasWildcards_KeepAllRecordsWithSameUdi" +
                    "dNumberAndSameUdidText", ((string[])(null)));
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
 testRunner.Given("I have a record with a reckey of \'1\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
  testRunner.And("I have a record with a reckey of \'1\' and a udid number of \'11\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'11\' and a udid text of" +
                    " \'nope\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
  testRunner.And("I have a record with a reckey of \'3\' and a udid number of \'12\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
  testRunner.And("I have a udid parameter with a udid number of \'10\' and a udid text of \'foo\' and a" +
                    "n operator of \'Equal\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
  testRunner.And("I have a udid parameter with a udid number of \'11\' and a udid text of \'foob%\' and" +
                    " an operator of \'Equal\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
  testRunner.And("I have an AndOr of \'And\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.When("I get the reckeys to keep", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
 testRunner.Then("I have \'1\' distinct reckeys remaining", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 33
  testRunner.And("the reckey \'1\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
  testRunner.And("the reckey \'2\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
  testRunner.And("the reckey \'3\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MultipleUdidFilters Not Equals Operator Or Join One of the Udids Doesnt Exist Ret" +
            "urn Reckey")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MultiUdidConditionalFeature")]
        public virtual void MultipleUdidFiltersNotEqualsOperatorOrJoinOneOfTheUdidsDoesntExistReturnReckey()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MultipleUdidFilters Not Equals Operator Or Join One of the Udids Doesnt Exist Ret" +
                    "urn Reckey", ((string[])(null)));
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
 testRunner.Given("I have a record with a reckey of \'585650586\' and a udid number of \'800\' and a udi" +
                    "d text of \'379630XXXXX1005\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 39
  testRunner.And("I have a udid parameter with a udid number of \'805\' and a udid text of \'%\' and an" +
                    " operator of \'NotEqual\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
  testRunner.And("I have a udid parameter with a udid number of \'800\' and a udid text of \'%\' and an" +
                    " operator of \'NotEqual\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.When("I get the reckeys to keep", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
 testRunner.Then("I have \'1\' distinct reckeys remaining", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 43
  testRunner.And("the reckey \'585650586\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MultipleUdidFilters_EqualsOperator_OrJoin_KeepAllRecordsWithAtLeastOneMatchingUdi" +
            "dNumberAndUdidText")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MultiUdidConditionalFeature")]
        public virtual void MultipleUdidFilters_EqualsOperator_OrJoin_KeepAllRecordsWithAtLeastOneMatchingUdidNumberAndUdidText()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MultipleUdidFilters_EqualsOperator_OrJoin_KeepAllRecordsWithAtLeastOneMatchingUdi" +
                    "dNumberAndUdidText", ((string[])(null)));
#line 45
this.ScenarioSetup(scenarioInfo);
#line 46
 testRunner.Given("I have a record with a reckey of \'1\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 47
  testRunner.And("I have a record with a reckey of \'1\' and a udid number of \'11\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'11\' and a udid text of" +
                    " \'nope\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
  testRunner.And("I have a record with a reckey of \'3\' and a udid number of \'12\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'10\' and a udid text of" +
                    " \'blah\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'11\' and a udid text of" +
                    " \'blah blah\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
  testRunner.And("I have a udid parameter with a udid number of \'10\' and a udid text of \'foo\' and a" +
                    "n operator of \'Equal\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
  testRunner.And("I have a udid parameter with a udid number of \'11\' and a udid text of \'foobar\' an" +
                    "d an operator of \'Equal\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
  testRunner.And("I have an AndOr of \'Or\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.When("I get the reckeys to keep", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
 testRunner.Then("I have \'2\' distinct reckeys remaining", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 58
  testRunner.And("the reckey \'1\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
  testRunner.And("the reckey \'2\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
  testRunner.And("the reckey \'3\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
  testRunner.And("the reckey \'4\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MultipleUdidFilters_EqualsOperator_OrJoin_HasWildcards_KeepAllRecordsWithAtLeastO" +
            "neMatchingUdidNumberAndUdidText")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MultiUdidConditionalFeature")]
        public virtual void MultipleUdidFilters_EqualsOperator_OrJoin_HasWildcards_KeepAllRecordsWithAtLeastOneMatchingUdidNumberAndUdidText()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MultipleUdidFilters_EqualsOperator_OrJoin_HasWildcards_KeepAllRecordsWithAtLeastO" +
                    "neMatchingUdidNumberAndUdidText", ((string[])(null)));
#line 63
this.ScenarioSetup(scenarioInfo);
#line 64
 testRunner.Given("I have a record with a reckey of \'1\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 65
  testRunner.And("I have a record with a reckey of \'1\' and a udid number of \'11\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'11\' and a udid text of" +
                    " \'nope\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
  testRunner.And("I have a record with a reckey of \'3\' and a udid number of \'12\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'10\' and a udid text of" +
                    " \'blah\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'11\' and a udid text of" +
                    " \'blah blah\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
  testRunner.And("I have a udid parameter with a udid number of \'10\' and a udid text of \'f%\' and an" +
                    " operator of \'Equal\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
  testRunner.And("I have a udid parameter with a udid number of \'11\' and a udid text of \'foobar\' an" +
                    "d an operator of \'Equal\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
  testRunner.And("I have an AndOr of \'Or\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.When("I get the reckeys to keep", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 75
 testRunner.Then("I have \'2\' distinct reckeys remaining", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 76
  testRunner.And("the reckey \'1\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
  testRunner.And("the reckey \'2\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
  testRunner.And("the reckey \'3\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
  testRunner.And("the reckey \'4\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MultipleUdidFilters_NotEqualsOperator_AndJoin_KeepAllRecordsWithDifferentUdidNumb" +
            "er_KeepAllRecordsWithSameUdidNumberButDifferentText")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MultiUdidConditionalFeature")]
        public virtual void MultipleUdidFilters_NotEqualsOperator_AndJoin_KeepAllRecordsWithDifferentUdidNumber_KeepAllRecordsWithSameUdidNumberButDifferentText()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MultipleUdidFilters_NotEqualsOperator_AndJoin_KeepAllRecordsWithDifferentUdidNumb" +
                    "er_KeepAllRecordsWithSameUdidNumberButDifferentText", ((string[])(null)));
#line 81
this.ScenarioSetup(scenarioInfo);
#line 82
 testRunner.Given("I have a record with a reckey of \'1\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 83
  testRunner.And("I have a record with a reckey of \'1\' and a udid number of \'11\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'11\' and a udid text of" +
                    " \'nope\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
  testRunner.And("I have a record with a reckey of \'3\' and a udid number of \'12\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'10\' and a udid text of" +
                    " \'blah\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'11\' and a udid text of" +
                    " \'blah blah\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
  testRunner.And("I have a udid parameter with a udid number of \'10\' and a udid text of \'foo\' and a" +
                    "n operator of \'NotEqual\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
  testRunner.And("I have a udid parameter with a udid number of \'11\' and a udid text of \'foobar\' an" +
                    "d an operator of \'NotEqual\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
  testRunner.And("I have an AndOr of \'And\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.When("I get the reckeys to keep", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 93
 testRunner.Then("I have \'2\' distinct reckeys remaining", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 94
  testRunner.And("the reckey \'1\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
  testRunner.And("the reckey \'2\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
  testRunner.And("the reckey \'3\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
  testRunner.And("the reckey \'4\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("SingleUdidFilter_NotEqualsOperator_AndJoin_KeepAllRecordsWithDifferentUdidNumber_" +
            "KeepAllRecordsWithSameUdidNumberButDifferentText")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MultiUdidConditionalFeature")]
        public virtual void SingleUdidFilter_NotEqualsOperator_AndJoin_KeepAllRecordsWithDifferentUdidNumber_KeepAllRecordsWithSameUdidNumberButDifferentText()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("SingleUdidFilter_NotEqualsOperator_AndJoin_KeepAllRecordsWithDifferentUdidNumber_" +
                    "KeepAllRecordsWithSameUdidNumberButDifferentText", ((string[])(null)));
#line 99
this.ScenarioSetup(scenarioInfo);
#line 100
 testRunner.Given("I have a record with a reckey of \'1\' and a udid number of \'11\' and a udid text of" +
                    " \'bar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 101
  testRunner.And("I have a record with a reckey of \'1\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
  testRunner.And("I have a record with a reckey of \'3\' and a udid number of \'10\' and a udid text of" +
                    " \'bar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'11\' and a udid text of" +
                    " \'blah\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
  testRunner.And("I have a udid parameter with a udid number of \'10\' and a udid text of \'foo\' and a" +
                    "n operator of \'NotEqual\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
  testRunner.And("I have an AndOr of \'And\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
 testRunner.When("I get the reckeys to keep", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 108
 testRunner.Then("I have \'2\' distinct reckeys remaining", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 109
  testRunner.And("the reckey \'1\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
  testRunner.And("the reckey \'2\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
  testRunner.And("the reckey \'3\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
  testRunner.And("the reckey \'4\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MultipleUdidFilters_NotEqualsOperator_AndJoin_HasWildcards_KeepAllRecordsWithDiff" +
            "erentUdidNumber_KeepAllRecordsWithSameUdidNumberButDifferentText")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MultiUdidConditionalFeature")]
        public virtual void MultipleUdidFilters_NotEqualsOperator_AndJoin_HasWildcards_KeepAllRecordsWithDifferentUdidNumber_KeepAllRecordsWithSameUdidNumberButDifferentText()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MultipleUdidFilters_NotEqualsOperator_AndJoin_HasWildcards_KeepAllRecordsWithDiff" +
                    "erentUdidNumber_KeepAllRecordsWithSameUdidNumberButDifferentText", ((string[])(null)));
#line 114
this.ScenarioSetup(scenarioInfo);
#line 115
 testRunner.Given("I have a record with a reckey of \'1\' and a udid number of \'10\' and a udid text of" +
                    " \'bar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 116
  testRunner.And("I have a record with a reckey of \'1\' and a udid number of \'11\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'11\' and a udid text of" +
                    " \'nope\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
  testRunner.And("I have a record with a reckey of \'3\' and a udid number of \'12\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 120
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'10\' and a udid text of" +
                    " \'blah\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'11\' and a udid text of" +
                    " \'blah blah\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
  testRunner.And("I have a udid parameter with a udid number of \'10\' and a udid text of \'foo\' and a" +
                    "n operator of \'NotEqual\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
  testRunner.And("I have a udid parameter with a udid number of \'11\' and a udid text of \'foob%\' and" +
                    " an operator of \'NotEqual\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
  testRunner.And("I have an AndOr of \'And\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
 testRunner.When("I get the reckeys to keep", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 126
 testRunner.Then("I have \'2\' distinct reckeys remaining", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 127
  testRunner.And("the reckey \'1\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
  testRunner.And("the reckey \'2\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
  testRunner.And("the reckey \'3\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
  testRunner.And("the reckey \'4\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MultipleUdidFilters_NotEqualsOperator_OrJoin_KeepAllRecordsWithDifferentUdidNumbe" +
            "r_KeepAllRecordsWithAtLeastOneSameUdidNumberButDifferentText")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MultiUdidConditionalFeature")]
        public virtual void MultipleUdidFilters_NotEqualsOperator_OrJoin_KeepAllRecordsWithDifferentUdidNumber_KeepAllRecordsWithAtLeastOneSameUdidNumberButDifferentText()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MultipleUdidFilters_NotEqualsOperator_OrJoin_KeepAllRecordsWithDifferentUdidNumbe" +
                    "r_KeepAllRecordsWithAtLeastOneSameUdidNumberButDifferentText", ((string[])(null)));
#line 132
this.ScenarioSetup(scenarioInfo);
#line 133
 testRunner.Given("I have a record with a reckey of \'1\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 134
  testRunner.And("I have a record with a reckey of \'1\' and a udid number of \'11\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'11\' and a udid text of" +
                    " \'nope\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
  testRunner.And("I have a record with a reckey of \'3\' and a udid number of \'12\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 138
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'10\' and a udid text of" +
                    " \'bar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 139
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'11\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 140
  testRunner.And("I have a udid parameter with a udid number of \'10\' and a udid text of \'foo\' and a" +
                    "n operator of \'NotEqual\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
  testRunner.And("I have a udid parameter with a udid number of \'11\' and a udid text of \'foobar\' an" +
                    "d an operator of \'NotEqual\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
  testRunner.And("I have an AndOr of \'Or\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
 testRunner.When("I get the reckeys to keep", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 144
 testRunner.Then("I have \'2\' distinct reckeys remaining", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 145
  testRunner.And("the reckey \'1\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
  testRunner.And("the reckey \'2\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
  testRunner.And("the reckey \'3\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
  testRunner.And("the reckey \'4\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MultipleUdidFilters_NotEqualsOperator_OrJoin_HasWildcards_KeepAllRecordsWithDiffe" +
            "rentUdidNumber_KeepAllRecordsWithAtLeastOneSameUdidNumberButDifferentText")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MultiUdidConditionalFeature")]
        public virtual void MultipleUdidFilters_NotEqualsOperator_OrJoin_HasWildcards_KeepAllRecordsWithDifferentUdidNumber_KeepAllRecordsWithAtLeastOneSameUdidNumberButDifferentText()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MultipleUdidFilters_NotEqualsOperator_OrJoin_HasWildcards_KeepAllRecordsWithDiffe" +
                    "rentUdidNumber_KeepAllRecordsWithAtLeastOneSameUdidNumberButDifferentText", ((string[])(null)));
#line 150
this.ScenarioSetup(scenarioInfo);
#line 151
 testRunner.Given("I have a record with a reckey of \'1\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 152
  testRunner.And("I have a record with a reckey of \'1\' and a udid number of \'11\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'11\' and a udid text of" +
                    " \'nope\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 155
  testRunner.And("I have a record with a reckey of \'3\' and a udid number of \'12\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 156
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'10\' and a udid text of" +
                    " \'bar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 157
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'11\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
  testRunner.And("I have a udid parameter with a udid number of \'10\' and a udid text of \'f%\' and an" +
                    " operator of \'NotEqual\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
  testRunner.And("I have a udid parameter with a udid number of \'11\' and a udid text of \'foobar\' an" +
                    "d an operator of \'NotEqual\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 160
  testRunner.And("I have an AndOr of \'Or\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 161
 testRunner.When("I get the reckeys to keep", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 162
 testRunner.Then("I have \'2\' distinct reckeys remaining", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 163
  testRunner.And("the reckey \'1\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
  testRunner.And("the reckey \'2\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
  testRunner.And("the reckey \'3\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
  testRunner.And("the reckey \'4\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MultipleUdidFilters_MixedEqualsAndNotEqualsOperator_AndJoin_KeepRecordsWithSameUd" +
            "idNumberAndTextAsEqualFilter_And_NoOtherUdidNumber_OrDifferentUdidNumberThanNotE" +
            "qualFilter_OrSameUdidNumberButDifferentUdidTextAsNotEqualFilter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MultiUdidConditionalFeature")]
        public virtual void MultipleUdidFilters_MixedEqualsAndNotEqualsOperator_AndJoin_KeepRecordsWithSameUdidNumberAndTextAsEqualFilter_And_NoOtherUdidNumber_OrDifferentUdidNumberThanNotEqualFilter_OrSameUdidNumberButDifferentUdidTextAsNotEqualFilter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MultipleUdidFilters_MixedEqualsAndNotEqualsOperator_AndJoin_KeepRecordsWithSameUd" +
                    "idNumberAndTextAsEqualFilter_And_NoOtherUdidNumber_OrDifferentUdidNumberThanNotE" +
                    "qualFilter_OrSameUdidNumberButDifferentUdidTextAsNotEqualFilter", ((string[])(null)));
#line 168
this.ScenarioSetup(scenarioInfo);
#line 169
 testRunner.Given("I have a record with a reckey of \'1\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 170
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'12\' and a udid text of" +
                    " \'nope\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
  testRunner.And("I have a record with a reckey of \'3\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 173
  testRunner.And("I have a record with a reckey of \'3\' and a udid number of \'11\' and a udid text of" +
                    " \'blah\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'11\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 176
  testRunner.And("I have a udid parameter with a udid number of \'10\' and a udid text of \'foo\' and a" +
                    "n operator of \'Equal\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 177
  testRunner.And("I have a udid parameter with a udid number of \'11\' and a udid text of \'foobar\' an" +
                    "d an operator of \'NotEqual\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
  testRunner.And("I have an AndOr of \'And\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 179
 testRunner.When("I get the reckeys to keep", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 180
 testRunner.Then("I have \'3\' distinct reckeys remaining", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 181
  testRunner.And("the reckey \'1\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 182
  testRunner.And("the reckey \'2\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
  testRunner.And("the reckey \'3\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
  testRunner.And("the reckey \'4\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MultipleUdidFilters_MixedEqualsAndNotEqualsOperator_AndJoin_HasWildcards_KeepReco" +
            "rdsWithSameUdidNumberAndTextAsEqualFilter_And_NoOtherUdidNumber_OrDifferentUdidN" +
            "umberThanNotEqualFilter_OrSameUdidNumberButDifferentUdidTextAsNotEqualFilter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MultiUdidConditionalFeature")]
        public virtual void MultipleUdidFilters_MixedEqualsAndNotEqualsOperator_AndJoin_HasWildcards_KeepRecordsWithSameUdidNumberAndTextAsEqualFilter_And_NoOtherUdidNumber_OrDifferentUdidNumberThanNotEqualFilter_OrSameUdidNumberButDifferentUdidTextAsNotEqualFilter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MultipleUdidFilters_MixedEqualsAndNotEqualsOperator_AndJoin_HasWildcards_KeepReco" +
                    "rdsWithSameUdidNumberAndTextAsEqualFilter_And_NoOtherUdidNumber_OrDifferentUdidN" +
                    "umberThanNotEqualFilter_OrSameUdidNumberButDifferentUdidTextAsNotEqualFilter", ((string[])(null)));
#line 186
this.ScenarioSetup(scenarioInfo);
#line 187
 testRunner.Given("I have a record with a reckey of \'1\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 188
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'12\' and a udid text of" +
                    " \'nope\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
  testRunner.And("I have a record with a reckey of \'3\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
  testRunner.And("I have a record with a reckey of \'3\' and a udid number of \'11\' and a udid text of" +
                    " \'blah\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 192
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 193
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'11\' and a udid text of" +
                    " \'fooblast\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 194
  testRunner.And("I have a udid parameter with a udid number of \'10\' and a udid text of \'foo\' and a" +
                    "n operator of \'Equal\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
  testRunner.And("I have a udid parameter with a udid number of \'11\' and a udid text of \'foob%\' and" +
                    " an operator of \'NotEqual\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
  testRunner.And("I have an AndOr of \'And\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
 testRunner.When("I get the reckeys to keep", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 198
 testRunner.Then("I have \'3\' distinct reckeys remaining", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 199
  testRunner.And("the reckey \'1\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
  testRunner.And("the reckey \'2\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 201
  testRunner.And("the reckey \'3\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 202
  testRunner.And("the reckey \'4\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MultipleUdidFilters_MixedEqualsAndNotEqualsOperator_OrJoin_KeepRecordsWithAtLeast" +
            "_UdidTextAndUdidNumberEqualOnEqualFilter_UdidNumberEqualButUdidTextDifferentOnNo" +
            "tEqualFilter_OrAUdidNumberNotInFilter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MultiUdidConditionalFeature")]
        public virtual void MultipleUdidFilters_MixedEqualsAndNotEqualsOperator_OrJoin_KeepRecordsWithAtLeast_UdidTextAndUdidNumberEqualOnEqualFilter_UdidNumberEqualButUdidTextDifferentOnNotEqualFilter_OrAUdidNumberNotInFilter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MultipleUdidFilters_MixedEqualsAndNotEqualsOperator_OrJoin_KeepRecordsWithAtLeast" +
                    "_UdidTextAndUdidNumberEqualOnEqualFilter_UdidNumberEqualButUdidTextDifferentOnNo" +
                    "tEqualFilter_OrAUdidNumberNotInFilter", ((string[])(null)));
#line 204
this.ScenarioSetup(scenarioInfo);
#line 205
 testRunner.Given("I have a record with a reckey of \'1\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 206
  testRunner.And("I have a record with a reckey of \'1\' and a udid number of \'11\' and a udid text of" +
                    " \'bar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 207
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'10\' and a udid text of" +
                    " \'bar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 208
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'11\' and a udid text of" +
                    " \'nope\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 209
  testRunner.And("I have a record with a reckey of \'3\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
  testRunner.And("I have a record with a reckey of \'3\' and a udid number of \'12\' and a udid text of" +
                    " \'blah\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 211
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'10\' and a udid text of" +
                    " \'bar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 212
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'11\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 213
  testRunner.And("I have a record with a reckey of \'5\' and a udid number of \'20\' and a udid text of" +
                    " \'blah\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 214
  testRunner.And("I have a udid parameter with a udid number of \'10\' and a udid text of \'foo\' and a" +
                    "n operator of \'Equal\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 215
  testRunner.And("I have a udid parameter with a udid number of \'11\' and a udid text of \'foobar\' an" +
                    "d an operator of \'NotEqual\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 216
  testRunner.And("I have an AndOr of \'Or\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
 testRunner.When("I get the reckeys to keep", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 218
 testRunner.Then("I have \'4\' distinct reckeys remaining", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 219
  testRunner.And("the reckey \'1\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 220
  testRunner.And("the reckey \'2\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 221
  testRunner.And("the reckey \'3\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 222
  testRunner.And("the reckey \'4\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 223
  testRunner.And("the reckey \'5\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("MultipleUdidFilters_MixedEqualsAndNotEqualsOperator_OrJoin_HasWildcards_KeepRecor" +
            "dsWithAtLeast_UdidTextAndUdidNumberEqualOnEqualFilter_UdidNumberEqualButUdidText" +
            "DifferentOnNotEqualFilter_OrAUdidNumberNotInFilter")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MultiUdidConditionalFeature")]
        public virtual void MultipleUdidFilters_MixedEqualsAndNotEqualsOperator_OrJoin_HasWildcards_KeepRecordsWithAtLeast_UdidTextAndUdidNumberEqualOnEqualFilter_UdidNumberEqualButUdidTextDifferentOnNotEqualFilter_OrAUdidNumberNotInFilter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MultipleUdidFilters_MixedEqualsAndNotEqualsOperator_OrJoin_HasWildcards_KeepRecor" +
                    "dsWithAtLeast_UdidTextAndUdidNumberEqualOnEqualFilter_UdidNumberEqualButUdidText" +
                    "DifferentOnNotEqualFilter_OrAUdidNumberNotInFilter", ((string[])(null)));
#line 225
this.ScenarioSetup(scenarioInfo);
#line 226
 testRunner.Given("I have a record with a reckey of \'1\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 227
  testRunner.And("I have a record with a reckey of \'1\' and a udid number of \'11\' and a udid text of" +
                    " \'bar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 228
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'10\' and a udid text of" +
                    " \'bar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 229
  testRunner.And("I have a record with a reckey of \'2\' and a udid number of \'11\' and a udid text of" +
                    " \'nope\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 230
  testRunner.And("I have a record with a reckey of \'3\' and a udid number of \'10\' and a udid text of" +
                    " \'foo\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 231
  testRunner.And("I have a record with a reckey of \'3\' and a udid number of \'12\' and a udid text of" +
                    " \'blah\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 232
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'10\' and a udid text of" +
                    " \'bar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 233
  testRunner.And("I have a record with a reckey of \'4\' and a udid number of \'11\' and a udid text of" +
                    " \'foobar\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 234
  testRunner.And("I have a record with a reckey of \'5\' and a udid number of \'20\' and a udid text of" +
                    " \'blah\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 235
  testRunner.And("I have a udid parameter with a udid number of \'10\' and a udid text of \'f%\' and an" +
                    " operator of \'Equal\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 236
  testRunner.And("I have a udid parameter with a udid number of \'11\' and a udid text of \'foobar\' an" +
                    "d an operator of \'NotEqual\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 237
  testRunner.And("I have an AndOr of \'Or\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 238
 testRunner.When("I get the reckeys to keep", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 239
 testRunner.Then("I have \'4\' distinct reckeys remaining", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 240
  testRunner.And("the reckey \'1\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 241
  testRunner.And("the reckey \'2\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 242
  testRunner.And("the reckey \'3\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 243
  testRunner.And("the reckey \'4\' no longer exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 244
  testRunner.And("the reckey \'5\' still exists", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
