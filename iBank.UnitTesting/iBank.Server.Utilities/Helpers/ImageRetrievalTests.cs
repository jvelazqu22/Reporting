using System.Collections.Generic;

using iBank.Entities.ClientEntities;
using iBank.Entities.MasterEntities;
using iBank.Repository.SQL.Interfaces;
using iBank.Server.Utilities.Helpers;
using iBank.UnitTesting.TestingHelpers.MockHelpers;

using Microsoft.VisualStudio.TestTools.UnitTesting;

using Moq;

namespace iBank.UnitTesting.iBank.Server.Utilities.Helpers
{
    [TestClass]
    public class ImageRetrievalTests
    {
        private IMasterDataStore _masterDataStore;

        private IClientDataStore _clientDataStore;

        [TestInitialize]
        public void Init()
        {
            var mockClientDb = new Mock<IClientQueryable>();
            var mockMasterDb = new Mock<IMastersQueryable>();

            var validStyleGroupExtra = new StyleGroupExtras { SGroupNbr = 1, ClientCode = "FOO", FieldFunction = "RPTLOGO_IMAGENBR", FieldData = "1" };
            var validButNoImage = new StyleGroupExtras { SGroupNbr = 2, ClientCode = "FOO", FieldFunction = "RPTLOGO_IMAGENBR", FieldData = "2" };
            var invalidStyleGroupExtra = new StyleGroupExtras { SGroupNbr = 3, ClientCode = "FOO", FieldFunction = "RPTLOGO_IMAGENBR", FieldData = "Invalid" };
            mockClientDb.Setup(x => x.StyleGroupExtra).Returns( MockHelper.GetListAsQueryable(new List<StyleGroupExtras> { validStyleGroupExtra, validButNoImage, invalidStyleGroupExtra }).Object);

            var encodedData =
                @"";
            var validClientImage = new ClientImages { Agency = "FOO", ImageNbr = 1, ImageName = "Image Name", EncodedData = encodedData };
            var defaultClientImage = new ClientImages { Agency = "[defRpt]", ImageNbr = 2, ImageName = "default", EncodedData = encodedData };
            mockMasterDb.Setup(x => x.ClientImages).Returns(MockHelper.GetListAsQueryable(new List<ClientImages> { validClientImage, defaultClientImage }).Object);

            var mockMasterStore = new Mock<IMasterDataStore>();
            mockMasterStore.Setup(x => x.MastersQueryDb).Returns(mockMasterDb.Object);
            var mockClientStore = new Mock<IClientDataStore>();
            mockClientStore.Setup(x => x.ClientQueryDb).Returns(mockClientDb.Object);

            _masterDataStore = mockMasterStore.Object;
            _clientDataStore = mockClientStore.Object;
        }

        [TestMethod]

        public void GetStandardReportImage_StyleGroupExistsImageNumberValid_ReturnAgencyImage()
        {
            var sut = new ImageRetrieval(_masterDataStore, _clientDataStore);
            var styleGroupNumber = 1;
            var agency = "FOO";

            var output = sut.GetStandardReportImage(styleGroupNumber, agency);

            Assert.AreEqual("Image Name", output.ImageName);
        }

        [TestMethod]

        public void GetStandardReportImage_StyleGroupDoesntExist_ReturnDefaultImage()
        {
            var sut = new ImageRetrieval(_masterDataStore, _clientDataStore);
            var styleGroupNumber = 5;
            var agency = "FOO";

            var output = sut.GetStandardReportImage(styleGroupNumber, agency);

            Assert.AreEqual("default", output.ImageName);
        }

        [TestMethod]

        public void GetStandardReportImage_StyleGroupExistsImageNumberNotValid_ReturnDefaultImage()
        {
            var sut = new ImageRetrieval(_masterDataStore, _clientDataStore);
            var styleGroupNumber = 3;
            var agency = "FOO";

            var output = sut.GetStandardReportImage(styleGroupNumber, agency);

            Assert.AreEqual("default", output.ImageName);
        }

        [TestMethod]

        public void GetStandardReportImage_StyleGroupExistsImageNumberDoesntExist_ReturnDefaultImage()
        {
            var sut = new ImageRetrieval(_masterDataStore, _clientDataStore);
            var styleGroupNumber = 2;
            var agency = "FOO";

            var output = sut.GetStandardReportImage(styleGroupNumber, agency);

            Assert.AreEqual("default", output.ImageName);
        }
    }

}
